# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Bundle up module
        uses: actions/upload-artifact@v2
        with:
          name: module
          path: ./src/
  Test:
    needs: Build
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download module
        uses: actions/download-artifact@v2
        with:
          name: module
          path: ~/.local/share/powershell/Modules/Homebrew/
      # - name: Install Homebrew
      #   shell: pwsh
      #   run: Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ethanbergstrom/Croze/master/Install-Homebrew.ps1'))
      - name: Install Croze
        shell: pwsh
        run: Install-Module Croze -Force
      - name: Test with Pester
        shell: pwsh
        run: |
          Invoke-Pester -Configuration (New-PesterConfiguration -Hashtable @{
            Run = @{
              Exit = $true
            }
            TestResult = @{
              Enabled = $true
              OutputFormat = 'JUnitXML'
            }
          })
      - name: Upload Pester test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: testResults.xml
      - name: Upload Homebrew logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Homebrew-logs
          path: "~/Library/Logs/Homebrew/"
  Results:
    needs: Test
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: test-results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test-results/**/*.xml
  Publish:
    needs: Test
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Download module
        uses: actions/download-artifact@v2
        with:
          name: module
          path: '~/.local/share/powershell/Modules/Homebrew'
      - name: Install Croze
        shell: pwsh
        run: Install-Module Croze -Force
      - name: Publish Module
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        shell: pwsh
        run: Write-Output "Publishing..."; Publish-Module -Name Homebrew -NuGetApiKey $env:NUGET_KEY
